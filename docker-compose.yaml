version: '3.8'

services:
  frontend:
    container_name: wasser-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    # ports:
    #   - "3000:3000"
    volumes:
      - ./src:/app/src
      - ./public:/app/public
    environment:
      - NODE_ENV=development
    depends_on:
      - postgres
      - backend
    labels:     
      com.centurylinklabs.watchtower.enable: false
      traefik.enable: true
      traefik.http.routers.wwidw.entrypoints: websecure
      traefik.http.routers.wwidw.rule: Host(`wie-warm-ist-das-wasser.inu-the-bot.com`)
      traefik.http.services.wwidw.loadbalancer.server.port: 80
    networks:
      - default
      - proxy
    
  backend:
    container_name: wasser-backend
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    # ports:
    #   - "8889:8889"
    depends_on:
      - postgres
    labels:
      com.centurylinklabs.watchtower.enable: false
      traefik.enable: true
      traefik.http.routers.wwidw-back.entrypoints: websecure
      traefik.http.routers.wwidw-back.rule: Host(`wwidw-backend.inu-the-bot.com`)
      traefik.http.services.wwidw-back.loadbalancer.server.port: 8889
    networks:
      - default
      - proxy

  postgres:
    container_name: wasser-postgres
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: your_database_name
      POSTGRES_USER: your_username
      POSTGRES_PASSWORD: your_password
    networks:
      - default

networks:
  proxy:
    external: true
  default:
